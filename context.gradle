def loadProperties(filename) {
    Properties properties = new Properties()

    def file = new File(settingsDir, filename)

    if (file.exists()) {
        properties.load(file.newDataInputStream())
    } else {
        logger.warn("Properties file ${file} does not exist")
    }

    return properties
}

gradle.ext.appProperties = loadProperties('app.properties')
gradle.ext.moduleConfig = loadProperties('moduleConfig.properties')
gradle.ext.localMavenDir = file(gradle.ext.moduleConfig.localMavenPath)
gradle.ext.localGradleDir = file(gradle.ext.moduleConfig.localGradlePath)


// 引入composing的设置
apply from: "gradle/composingConfig.gradle"
// 遍历composing_dependencies中的所有配置
ext.getProperty("composing_dependencies").each { projectConfig ->
    def isLocal = projectConfig["isLocal"]
    def projectPath = projectConfig["projectPath"]
    def projectMaven = projectConfig["projectMaven"]
    def projectName = projectConfig["projectName"]
    // 如果是本地依赖
    if (isLocal) {
        // 使用本地依赖进行替换
        includeBuild(projectPath) {
            dependencySubstitution {
                substitute module(projectMaven) with project(projectName)
            }
        }
    }
}
